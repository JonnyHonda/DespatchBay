// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace DespatchBay.addressing.api.despatchbaypro.com {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AddressingServiceBinding", Namespace="urn:despatchbay")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AddressKeyType))]
    public partial class AddressingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDomesticAddressByLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomesticAddressByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomesticAddressKeysByPostcodeOperationCompleted;
        
        /// CodeRemarks
        public AddressingService() {
            this.Url = "http://api.despatchbaypro.com/soap/v11/addressing.php";
        }
        
        public AddressingService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event GetDomesticAddressByLookupCompletedEventHandler GetDomesticAddressByLookupCompleted;
        
        /// CodeRemarks
        public event GetDomesticAddressByKeyCompletedEventHandler GetDomesticAddressByKeyCompleted;
        
        /// CodeRemarks
        public event GetDomesticAddressKeysByPostcodeCompletedEventHandler GetDomesticAddressKeysByPostcodeCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#GetDomesticAddressByLookup", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressDetailType GetDomesticAddressByLookup(string postcode, string property) {
            object[] results = this.Invoke("GetDomesticAddressByLookup", new object[] {
                        postcode,
                        property});
            return ((AddressDetailType)(results[0]));
        }
        
        /// CodeRemarks
        public void GetDomesticAddressByLookupAsync(string postcode, string property) {
            this.GetDomesticAddressByLookupAsync(postcode, property, null);
        }
        
        /// CodeRemarks
        public void GetDomesticAddressByLookupAsync(string postcode, string property, object userState) {
            if ((this.GetDomesticAddressByLookupOperationCompleted == null)) {
                this.GetDomesticAddressByLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomesticAddressByLookupOperationCompleted);
            }
            this.InvokeAsync("GetDomesticAddressByLookup", new object[] {
                        postcode,
                        property}, this.GetDomesticAddressByLookupOperationCompleted, userState);
        }
        
        private void OnGetDomesticAddressByLookupOperationCompleted(object arg) {
            if ((this.GetDomesticAddressByLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomesticAddressByLookupCompleted(this, new GetDomesticAddressByLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#GetDomesticAddressByKey", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressDetailType GetDomesticAddressByKey(string key) {
            object[] results = this.Invoke("GetDomesticAddressByKey", new object[] {
                        key});
            return ((AddressDetailType)(results[0]));
        }
        
        /// CodeRemarks
        public void GetDomesticAddressByKeyAsync(string key) {
            this.GetDomesticAddressByKeyAsync(key, null);
        }
        
        /// CodeRemarks
        public void GetDomesticAddressByKeyAsync(string key, object userState) {
            if ((this.GetDomesticAddressByKeyOperationCompleted == null)) {
                this.GetDomesticAddressByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomesticAddressByKeyOperationCompleted);
            }
            this.InvokeAsync("GetDomesticAddressByKey", new object[] {
                        key}, this.GetDomesticAddressByKeyOperationCompleted, userState);
        }
        
        private void OnGetDomesticAddressByKeyOperationCompleted(object arg) {
            if ((this.GetDomesticAddressByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomesticAddressByKeyCompleted(this, new GetDomesticAddressByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#GetDomesticAddressKeysByPostcode", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressKeyType[] GetDomesticAddressKeysByPostcode(string postcode) {
            object[] results = this.Invoke("GetDomesticAddressKeysByPostcode", new object[] {
                        postcode});
            return ((AddressKeyType[])(results[0]));
        }
        
        /// CodeRemarks
        public void GetDomesticAddressKeysByPostcodeAsync(string postcode) {
            this.GetDomesticAddressKeysByPostcodeAsync(postcode, null);
        }
        
        /// CodeRemarks
        public void GetDomesticAddressKeysByPostcodeAsync(string postcode, object userState) {
            if ((this.GetDomesticAddressKeysByPostcodeOperationCompleted == null)) {
                this.GetDomesticAddressKeysByPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomesticAddressKeysByPostcodeOperationCompleted);
            }
            this.InvokeAsync("GetDomesticAddressKeysByPostcode", new object[] {
                        postcode}, this.GetDomesticAddressKeysByPostcodeOperationCompleted, userState);
        }
        
        private void OnGetDomesticAddressKeysByPostcodeOperationCompleted(object arg) {
            if ((this.GetDomesticAddressKeysByPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomesticAddressKeysByPostcodeCompleted(this, new GetDomesticAddressKeysByPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:despatchbay")]
    public partial class AddressDetailType {
        
        /// <remarks/>
        public string CompanyName;
        
        /// <remarks/>
        public string Street;
        
        /// <remarks/>
        public string Locality;
        
        /// <remarks/>
        public string Town;
        
        /// <remarks/>
        public string County;
        
        /// <remarks/>
        public string Country;
        
        /// <remarks/>
        public string Postcode;
        
        /// <remarks/>
        public string Key;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:despatchbay")]
    public partial class AddressKeyType {
        
        /// <remarks/>
        public string Key;
        
        /// <remarks/>
        public string Address;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void GetDomesticAddressByLookupCompletedEventHandler(object sender, GetDomesticAddressByLookupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomesticAddressByLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomesticAddressByLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AddressDetailType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressDetailType)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void GetDomesticAddressByKeyCompletedEventHandler(object sender, GetDomesticAddressByKeyCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomesticAddressByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomesticAddressByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AddressDetailType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressDetailType)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void GetDomesticAddressKeysByPostcodeCompletedEventHandler(object sender, GetDomesticAddressKeysByPostcodeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomesticAddressKeysByPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomesticAddressKeysByPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public AddressKeyType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressKeyType[])(this.results[0]));
            }
        }
    }
}
